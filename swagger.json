{
    "swagger": "2.0",
    "info": {
        "description": "Todo app API documentation",
        "version": "1.0.0",
        "title": " Todo app",
        "termsOfService": "http://twitter.com/RobertNiyitanga",
        "contact": {
            "email": "robertwilly668@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "wrestle-app.herokuapp.com",
    "basePath": "/api/v1/todo/",
    "schemes": [
        "https"
    ],
    "paths": {
        "/signup": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "Define endpoint for creating new user",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Email",
                        "in": "formData",
                        "description": "email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Password",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "user schema",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "201": {
                        "description": "user created successfullY and logged in."
                    },
                    "400": {
                        "description": "bad request"
                    },
                    "409": {
                        "description": "bad request"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": " Endpoint for  login users ",
                "description": " login user in  order to get token ",
                "operationId": "login  user",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Email",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Password",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logging successfully"
                    },
                    "400": {
                        "description": "all field are required"
                    }
                }
            }
        },
        "/user/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "tags": [
                    "user"
                ],
                "summary": "Endpoint for delete users",
                "description": "This can only be done by the admin  user.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid token"
                    },
                    "403": {
                        "description": "Can't delete user its for admin user only"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/wrestles/": {
        
            "get": {
            "security": [
                    {
                        "Auth": []
                    }
                ],
                "tags": [
                    "wrestle"
                ],
                "summary": "Get all wrestle names",
                "description": "define endpoint to retrieve all wrestle",
                "operationId": "wrestle",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/wrestles/{id}": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "tags": [
                    "wrestle"
                ],
                "summary": "Endpoint for getting the wrestle by id",
                "description": "Get the wrestle by providing its id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "wrestle schema",
                        "schema": {
                            "$ref": "#/definitions/Wrestle"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Wrestle not found"
                    }
                }
            }
        },
        "/wrestles/create/": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "tags": [
                    "wrestle"
                ],
                "summary": "Endpoint for creating wrestle",
                "description": "Create wrestle",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Name",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "wrestle schema",
                        "schema": {
                            "$ref": "#/definitions/Wrestle"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Wrestle not found"
                    }
                }
            }
        },
        "/wrestles/update/{id}": {
            "put": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "tags": [
                    "wrestle"
                ],
                "summary": "Endpoint for update wrestle name by id",
                "description": "Update name",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "Name",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "You Can't update wrestle name which is not yours"
                    },
                    "404": {
                        "description": "Wrestle not found"
                    }
                }
            }
        },
        "/wrestles/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "tags": [
                    "wrestle"
                ],
                "summary": "Endpoint for deletes the wrestle name by id ",
                "description": " Delete wrestle by id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "You Can't delete Wrestle which is not yours"
                    },
                    "404": {
                        "description": "Wrestle not found"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Auth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "definitions": {
        "Wrestle": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "wrestleCreatorEmail": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "description": "User"
                }
            }
        }
    }
}